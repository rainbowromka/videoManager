(v)  Приркутить PostGreSQL
    (v) Взять за основу SERVER VKREACT
    (v) написать доку как прикручивать.
(v) Разместить на GitHub.
(v) Проработать мануал https://spring.io/guides/tutorials/react-and-spring-data-rest/
    (v) Прикрутить реакт.
    (v) Добавить доку как запускать рекат.
    (v) Разобраться с логином.

( ) Спроектировать форму вывода списка меток видеороликов.
    ( ) Урок с материалами. 32:45
    https://www.youtube.com/watch?v=tKzSnjWPtEw&list=PLQg6GaokU5CwiVmsZ0d_9Zsg_DnIP_xwr&index=2

( ) Реализовать UI реакта.
    ( ) Прикрутить ReactRedux
        (v) Добавляем компонент Users.
        (v) Добавляем роут путь и что бы открывался по роуте Users.
        (v) Добавляем users-reducers.js
        (v) Анализируем бизнеслогику, которую он должен делать.
        (v) Продумать какой у нас должен быть state. Прописать по умолчанию.
        (v) В случае с юзерами мы решили что в стейте будет массив пользователей users который содержит id, имя, признак друга, статус, страна и город проживания.
        (v) Далее прописываем в редьюсере все команды, которые будут выполняться с пользователями. Подписка на пользователя и отписка.
        (v) Пишем логику обработки состояния в случае возникновения события/команды, генерируемой UI.
        (v) В redux-store.js добавляем usersReducer.
        (v) Создаем контейнерную компоненту и коннектим в нее хранилище через state. Создаем mapStateToProps, mapDispatchToProps. Передаем их в параметрах коннекта.
        (v) Отрисовываем функциональную компоненту.
        (v) Прописываем события функциональной компоненты.
        ( ) Продумаем авторизацию.
            ( ) --> Я скопировал код из сайта redux form поэтому его надо передалать под меня.
                ( ) учесть в коде мои компоненты. Они закоментированы.
            ( ) сверстать компонент авторизации.
            ( ) установить компонент redux auth посмотреть пример.



        ( ) также редьюсер авторизации, со всеми хранилищами, пропсами и санками.
    ( ) Ходим на сервер сделаем API.
        ( ) API авторизации.
        ( ) API видео менеджера.



    ( ) Спроектировать UI простой список видео через storage.
( ) Реализовать видео. https://melgenek.github.io/spring-video-service
( ) Стриминг видео https://dzone.com/articles/streaming-data-with-spring-boot-restful-web-servic
( ) Стриминг видео https://melgenek.github.io/spring-video-service
( ) На Морде клиента реализовать проигрыватель https://video-react.js.org/components/player/